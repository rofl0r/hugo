Note for people who wants to compile Hu-Go!. (updated on 4 Dec 2000)

DOS version :

You should use DJGPP plus ALLEGRO (You can find the whole stuff on
www.delorie.com/djgpp/ and www.talula.demon.co.uk/)
Plus SEAL if you want to compile with sound (If you got another
proposition for making sound having a on-the-fly generated waveform,
I'd be glad to hear it)
EAGLE lib is also needed (4.1 should do it) for compiling
As for the unzip library, everything come from the info-zip group, I've
just put everything into a simple lib for using it more easily...
The lib 'libunzip.a' must be put in your lib directory, the "unzip.h"
must be either in your current directory or the include one...

In the distributed archive, you'll find a precompiled libunzip.a file
as well as eagle.o, eagle.h, eagle.txt and eagle.asm as asked in the
readme file.
There's a little batch file called install_src.bat to help you put the
two precompiled lib in the classic location (\djgpp\lib, don't hesist
changing it if needed).
I've set makedos.bat as a shortcut for make -f makefile.dos

LINUX version :

gcc or such is needed so it should be pretty easy to got it working.
Don't forget to define LINUX until I got Hu-Go! more portable.
The unix makefile is simply called "makefile".

WIN version :

mingw is needed, as well as allegro.
It should then behave just like the DOS version ...
"makewin" is a shortcut for "make -f makefile.mgw"
You'll need a win antive version of gnu make in order to have the
compilation happening without out problem. I faced command line length
limitation with the djgpp version of make...

OTHER versions :

To write, depending of other author's info

You can use the Makefile or RHIDE using the defines ALLEGRO (else you
will have to recreate a 'few' functions from this lib.), SOUND if you want to
use 'sound' (that was easy, wasn't it?) and FINAL_RELEASE will
'forget' a few things to make a clean EXE, fewer debug info
during execution, etc.

The code is less and less dirty, most unevidents things are commented.
If you make any changes, please notify me (no more special copyrighted
files in the source files as before...)

Be careful, the sound.c file doesn't like to be optimized (It's in the
'write_psg' function, if you find what's happening, please tell me....)

Now I use PGCC 2.90.23, it seems to work well and to optimize a bit more.

Don't hesitate, send me an e-mail if you don't understand something
(However, I still haven't understood everything ;), I may help you.
    ZEOGRAD@CARAMAIL.COM

